"Issue#","Title","GitHub Login","State"
1,"16-calc-standard-base-period","mteather","closed"
2,"initial commit for monetary standard base calculation","mteather","closed"
3,"16-more-tests","mteather","closed"
4,"Added unit tests + fixed bug re: unemployment insurance quarters.","mteather","closed"
5,"Added unit tests + fixed bug related to unemployment insurance quarter.","mteather","closed"
6,"Allow future claim dates","mteather","closed"
7,"Implement alternate base period (story 16)","mteather","closed"
8,"Create README","mteather","closed"
9,"Add Logging","mteather","closed"
10,"Implement Year and Week input options","mteather","closed"
11,"Refactor DateTimeExtensions to shared library","mteather","closed"
12,"DWD UI monetary lab issue 7","dpuglielli","closed"
13,"DateTimeExtensions Replacement","mteather","closed"
14,"Make readability changes outlined in PR #12","dpuglielli","closed"
15,"Per PR #12, there are some interface changes needed for BasePeriod","dpuglielli","closed"
16,"Add endpoint to expose alternate base period calculation","dpuglielli","closed"
17,"allow future claim dates","mteather","closed"
18,"Improve OpenAPI documentation on the Base Period Endpoint","dpuglielli","closed"
19,"fix #18 dwd-ui-monetary-lab-18 Improve OpenAPI documentation","dpuglielli","closed"
20,"added initial README","mteather","closed"
21,"Document and rename existing tests","mteather","closed"
22,"Build out unit tests","mteather","closed"
23,"Build out end-to-end integration tests","mteather","open"
24,"Standardize URL to 8080 local and Docker and code cleanup","dpuglielli","closed"
25,"fixes #24 dwd-ui-monetary-lab-24 Standardize URL to 8080 local and Cleanup","dpuglielli","closed"
26,"Issue 21 - Document and rename business test cases","mteather","closed"
27,"fixes #13 replace DateTimeExtensions","gopiyengiteela","closed"
28,"Add Postgres Cloud SQL persistence","dpuglielli","closed"
29,"Refactor BasePeriod to use abstract base class","mteather","closed"
30,"Add BasePeriodFactory","mteather","closed"
31,"MonetaryController Updates","mteather","closed"
32,"Treat warnings as errors in pipeline","mteather","open"
33,"Code Style - Documentation Blocks","mteather","closed"
34,"Code Style - Order of methods","mteather","open"
35,"9 add logging","avenue19","closed"
36,"fix #14 readability changes","gopiyengiteela","closed"
37,"fixes #33 Enforce XML documentation blocks on all code","avenue19","closed"
38,"fixes #31 MonetaryController Updates","avenue19","closed"
39,"28 add postgres cloud sql persistence","dpuglielli","closed"
40,"22 build unit tests","mteather","closed"
41,"PUT UpdateClaimantWage null reference if id does not exist","avenue19","open"
42,"POST CreateClaimantWage accepts invalid quarter, wages","avenue19","open"
43,"POST CreateClaimantWage unhandled exception when id exists","avenue19","open"
44,"GET GetAllClaimantWagesForClaimant returns OK when id doesn't exist","avenue19","open"
45,"S29 - check for all monetary qualifying requirements","gopiyengiteela","closed"
46,"45 s29 check for all monetary qualifying requirements","avenue19","closed"
47,"23 build out end to end integration tests","gopiyengiteela","closed"
48,"S33 - Establishing a Benefit year","dpuglielli","closed"
49,"S36 - Establish the Maximum Benefit Amount (MBA)","dpuglielli","closed"
50,"Test organization is inconsistent","avenue19","open"
51,"48 s33   establishing a benefit year","dpuglielli","closed"
52,"49 s36 establish mba","gopiyengiteela","closed"
53,"Refactor ICalendarQuarter/Weeks/Quarters","mteather","closed"
54,"Tech debt on 48 s33 establishing a benefit year #51","avenue19","closed"
55," Implement year and week input options","gopiyengiteela","closed"
56,"Completely refactor BasePeriod","dpuglielli","open"
57,"Discuss/Create new standard wrapper class for API responses","dpuglielli","open"
58,"Resolve warnings from StyleCop","dpuglielli","closed"
59,"Endpoint standardization and renaming","dpuglielli","closed"
60,".NET 6 migration","dpuglielli","closed"
61,"UI Calendar refactoring","dpuglielli","closed"
62,"Fix and document LFS usage","dpuglielli","closed"
63,"UI Calendar refactoring","avenue19","closed"
64,"Constructor Refactoring","mteather","open"
65," 63 UI Calendar Refactoring","avenue19","closed"
66,"Migrate to dotnet6","dpuglielli","closed"
67,"Review and document API docker container file","dpuglielli","closed"
68,"Resolve done TODOs","dpuglielli","closed"
69,"Gopi comments about CalculateBasePeriod.cs","dpuglielli","closed"
70,"#68 Resolve done TODOs and #58 Resolve warnings from StyleCop","dpuglielli","closed"
71,"Determine name formats for constants","dpuglielli","closed"
72,"Should CalendarQuarter be injected or can it be static","dpuglielli","closed"
73,"GetBenefitYear fails due to invariant culture","stephen-vakil","closed"
74,"Bug in GetBenefitYear","dpuglielli","closed"
75,"#73 GetBenefitYear fails due to invariant culture","dpuglielli","closed"
76,"fix #69 documentation","gopiyengiteela","closed"
77,"Add placeholders for development guidelines","mteather","closed"
78,"67 review and document api docker container script","dpuglielli","closed"
79,"Remove LFS and added first draft of dev docs","tstone-flexion","closed"
80,"59 endpoint standardization","dpuglielli","closed"
81,"77 Development Guide Placeholders","mteather","closed"
84,"[Epic] Determine Eligibility and Benefits for Worker","dpuglielli","open"
85,"[Epic] Calculating Employer Liability for a Benefit Claim","dpuglielli","open"
86,"[Epic] Send Employers Benefit Reports and Form","dpuglielli","open"
87,"[Epic] Receive Wage information from Employers","dpuglielli","open"
88,"[Story] S16 - Calculate Base Period","dpuglielli","closed"
89,"[Story] S33 - Establish Benefit Year","dpuglielli","open"
90,"[Story] S29 - Verify Qualifying Wage Requirements","dpuglielli","closed"
91,"[Story] S36 - Establish Maximum Benefit Amount","dpuglielli","closed"
92,"[Initiative] UI Monetary","dpuglielli","open"
93,"[Epic] Collect Eligibility Info from Employers","dpuglielli","open"
94,"Add ability to create 53-week benefit year","dpuglielli","open"
95,"fixes #54 Tech debt on 48 s33 establishing a benefit year #51","dpuglielli","closed"
96,"fixes #95 refactor wage api to accept a quarter list","avenue19","closed"
97,"[Tech Story] Technical debt addressed in Sprint 4","dpuglielli","open"
98,"Refactor wage api to accept a quarter list","dpuglielli","closed"
99,"Test Workflow-Status Changes","rgiesewi","open"
100,"Test Form Fields","rgiesewi","open"
101,"Issue Template","rgiesewi","closed"
102,"Updating development-guidelines.md to include PATs","tstone-flexion","closed"
103,"Added GCP Workflow spike yaml for task 76 and 93","stephen-vakil","closed"
104,"Updating development-guidelines.md to include PATs","dpuglielli","closed"
105,"End user documentation","dpuglielli","open"
106,"Initial Data Strategy","dpuglielli","open"
107,"Development Guidelines","dpuglielli","open"
108,"Spike - Securely calling an on-prem API from GCP","dpuglielli","open"
109,"Spike - Google Data Loss Prevention (DLP) Masking","dpuglielli","open"
110,"Discuss and Document GitHub configuration","dpuglielli","open"
111,"Collect and share Flexion ADR Materials","dpuglielli","open"
112,"Work Item Tracking","dpuglielli","open"
114,"107 development guidelines","mteather","open"
